<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.betweenls.fashtag.post.mapper.DetailMapper">

	<resultMap id="ResultMap" type="org.betweenls.fashtag.post.domain.PostVO">
		<id property="postId" column="postId"></id>
		<result property="postContent" column="postContent"></result>
		<result property="picture" column="picture"></result>
		<result property="createdAt" column="createdAt"></result>
		<result property="updatedAt" column="updatedAt"></result>
		<result property="readCount" column="readCount"></result>
		<result property="userId" column="userId"></result>
		<result property="likeCount" column="likeCount"></result>
		<result property="nickname" column="nickname"></result>
		<collection property="hashtags" column="postId" javaType="List" ofType="String" select="findHashtagByPostId"></collection>
	</resultMap>
	<select id="getPostDetailByPostId"
			resultMap="ResultMap">
		select p.postid,p.postContent, p.picture, p.createdat,p.updatedat,p.readcount,p.userid, nvl((select count(userid)
																						 from likes
																						 where postid = p.postid
																						 group by postid), 0) likeCount,
																				    u.nickname, u.profile
		from posts p inner join users u on p.userId = u.userId
		where postId = #{postId}
	</select>
	<select id="findHashtagByPostId" resultType="String" parameterType="Long">
		select substr(hashtag, 2)
		from post_hashtag ph inner join hashtag h on ph.hashtagId = h.hashtagId
		where postid = ${postId}
	</select>


</mapper>